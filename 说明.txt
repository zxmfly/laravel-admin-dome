mysql：生成migration文件 = php artisan make:migration comment(描述) --create =tablenames
(需要对表生成新的一个列的话)php artisan make:migration comment(描述) --table=tablenames
回退 migration = php artisan migrate：rollback
执行 migration = php artisan migrate

测试连接

一、快速搭建：首先确保安装好了laravel，并且数据库连接设置正确。
1、安装laravel5.5
	（1）、composer create-project --prefer-dist laravel/laravel blog 5.5.*。
	（2）、github上下载zip包，解压本地 https://github.com/laravel/laravel/tree/5.5
		   进入目录，运行composer install/update，加载必备的插件
		   将 .env.example 文件重命名为 .env ======》
		   接下来要做的事情就是将应用的 key（APP_KEY）设置为一个随机字符串，如果你是通过 Composer 或者 Laravel 安装器安装的话，该 key 的值已经通过 php artisan key:generate 命令生成好了。
		   配置数据库
		   配置url
		   	Nginx
			如果你使用的是 Nginx，使用如下站点配置指令就可以支持 URL 美化：
			location / {
			    try_files $uri $uri/ /index.php?$query_string;
			}
		   配置时区和语言包：
		   	//config/app.php
		   	'timezone' => 'Asia/Shanghai',
		   	'locale' => 'zh-CN',

2、安装laravel-admin
	(1)首先确保安装好了laravel，并且数据库连接设置正确。
			composer require encore/laravel-admin
	  	然后运行下面的命令来发布资源：
			php artisan vendor:publish --provider="Encore\Admin\AdminServiceProvider"
	  	在该命令会生成配置文件config/admin.
	    	php，可以在里面修改安装的地址、数据库连接、以及表名，建议都是用默认配置不修改。

	   	然后运行下面的命令完成安装：
			php artisan admin:install
			启动服务后，在浏览器打开 http://localhost/admin/ ,使用用户名 admin 和密码 admin登陆.
		===》在 `config/filesystems.php，disks中加入，admin的上传配置
		'admin' => [
            'driver'     => 'local',
            'root'       => public_path('upload'),
            'visibility' => 'public',
            'url' => env('APP_URL').'/upload/',
        ],

3、搭建第一个功能：
	（1）、先在laravel下建好对应模型，绑定相关数据库和字段：
		php artisan make:model Models/Article
	（2）、添加路由器,生成控制器
		使用下面的命令来创建一个对应App\Models\Article模型的路由器

		php artisan admin:make ArticleController --model=App\\Models\\Article

		// 在windows系统中
		php artisan admin:make ArticleController --model=App\Models\Article
	（3）、添加路由配置
		在laravel-admin的路由配置文件app/Admin/routes.php里添加一行：
		$router->resource('article', ArticleController::class);
	(4)、添加左侧菜单栏连接
		打开http://localhost:8000/admin/auth/menu，添加对应的menu, 然后就能在后台管理页面的左侧边栏看到用户管理页面的链接入口了。
		其中uri填写不包含路由前缀的的路径部分，比如完整路径是http://localhost:8000/admin/article, 那么就填article，如果要添加外部链接，只要填写完整的url即可，比如http://laravel-admin.org/.

4、剩下的工作就是构建数据表格和表单了，打开 app/Admin/Contollers/ArticleController.php,找到show()、grid()和form()方法，

5、grid() 方法：$grid->name('名字'); 把字段和说明对应，并列出
   form() 方法：// 添加text类型的input框 $form->text('name', '名字');

6、后台数据导出扩展:
首先安装好它：
composer require maatwebsite/excel:~2.1.0
php artisan vendor:publish --provider="Maatwebsite\Excel\ExcelServiceProvider"

然后新建导出控制器：
use App\Exceptions\ExcelExpoter.php;

最后，在需要的地方使用即可：
$excel = new ExcelExpoter();
$excel->setAttr(['id', '名字','年龄','性别','创建时间','修改时间'],
    ['id', 'name','age','sex','created_at','updated_at']);
$grid->exporter($excel);

7、laravel 数据迁移， migrate
php artisan migrate //执行，将database下的表，新建

====新建迁移文件
    （1、新建一个数据表的迁移文件。
          php artisan make:migration create_students_table
          --table  和 --create 参数可以用来指定数据表名称，以及迁移文件是否要建立新的数据表。

          创建student表的迁移文件
            php artisan make:migration create_student_table --create=student

    （2、生成模型的同时生成迁移文件。
          php artisan make:model Models/Student  -m

          创建一个文章的模型和迁移文件
          php artisan make:model Models/Article  -m

=====填充数据文件
    要生成一个填充器，可以通过 Artisan 命令 make:seeder。所有框架生成的填充器都位于 database/seeds 目录：
    php artisan make:seeder UsersTableSeeder

    执行单个填充文件
    php artisan db:seed  --class=StudentTableSeeder
    批量执行填充文件
    php artisan db:seed  //在seeds/DatabaseSeeder下增加